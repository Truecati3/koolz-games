diff --git a/pages/_app.js b/pages/_app.js
index 1111111..2222222 100644
--- a/pages/_app.js
+++ b/pages/_app.js
@@
-import "@/styles/globals.css";
-import { AuthProvider } from "@/context/AuthContext";
+import "../styles/globals.css";
+import { AuthProvider } from "../context/AuthContext";

 function MyApp({ Component, pageProps }) {
   return (
@@
 export default MyApp;
 
diff --git a/firebase.js b/firebase.js
index 1111111..2222222 100644
--- a/firebase.js
+++ b/firebase.js
@@
-import { initializeApp } from "firebase/app";
-import { getAuth } from "firebase/auth";
-import { getFirestore } from "firebase/firestore";
-
-const firebaseConfig = {
-  apiKey: process.env.FIREBASE_API_KEY,
-  authDomain: process.env.FIREBASE_AUTH_DOMAIN,
-  projectId: process.env.FIREBASE_PROJECT_ID,
-  storageBucket: process.env.FIREBASE_STORAGE_BUCKET,
-  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,
-  appId: process.env.FIREBASE_APP_ID,
-};
-
-const app = initializeApp(firebaseConfig);
-export const auth = getAuth(app);
-export const db = getFirestore(app);
-export default app;
+import { initializeApp } from "firebase/app";
+import { getAuth, GoogleAuthProvider } from "firebase/auth";
+import { getFirestore } from "firebase/firestore";
+
+const firebaseConfig = {
+  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
+  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
+  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
+  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
+  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
+  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
+};
+
+const app = initializeApp(firebaseConfig);
+export const auth = getAuth(app);
+export const db = getFirestore(app);
+export const googleProvider = new GoogleAuthProvider();
+export default app;
 
diff --git a/pages/login.js b/pages/login.js
index 1111111..2222222 100644
--- a/pages/login.js
+++ b/pages/login.js
@@
-import React from "react";
-
-export default function Login() {
-  return <h1>Login Page</h1>;
-}
+import { useRouter } from "next/router";
+import { signInWithPopup } from "firebase/auth";
+import { auth, googleProvider } from "../firebase";
+
+export default function Login() {
+  const router = useRouter();
+
+  const handleGoogleSignIn = async () => {
+    try {
+      await signInWithPopup(auth, googleProvider);
+      router.push("/dashboard");
+    } catch (err) {
+      console.error("Google Sign-In Error:", err);
+      alert("Google sign-in failed, check console.");
+    }
+  };
+
+  return (
+    <div style={{ padding: "40px", textAlign: "center" }}>
+      <h1>Login</h1>
+      <button
+        onClick={handleGoogleSignIn}
+        style={{
+          padding: "10px 20px",
+          background: "black",
+          color: "white",
+          border: "none",
+          borderRadius: "5px",
+          cursor: "pointer",
+          marginTop: "20px",
+        }}
+      >
+        Sign in with Google
+      </button>
+    </div>
+  );
+}
+
diff --git a/pages/dashboard.js b/pages/dashboard.js
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/pages/dashboard.js
@@
+import { useAuth } from "../context/AuthContext";
+
+export default function Dashboard() {
+  const { user, loading } = useAuth();
+
+  if (loading) return <p>Loading...</p>;
+  if (!user) return <p>You must log in to view this page.</p>;
+
+  return (
+    <div style={{ padding: "20px" }}>
+      <h1>Welcome, {user.email}</h1>
+      <p>This is your dashboard ðŸŽ‰</p>
+    </div>
+  );
+}
